name: ECommerce UI Release Build

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag version"
        required: true
      brand:
        type: choice
        description: "Brand"
        required: true
        options:
          - "kilap"
          - "dakter"
          - "otoke"
          - "purfress"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  RELEASE_VERSION: ${{ github.event.inputs.tag }}
  COMMIT_HASH: ""

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup language version
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_GITHUB_TOKEN }}

      - name: Extract branch name
        shell: bash
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: extract_branch

      - name: Sanitize environment variables
        run: |
          echo "IMAGE_NAME=${GITHUB_REPOSITORY@L}" >> $GITHUB_ENV
          if [[ ${{ env.RELEASE_VERSION }} == "latest" ]]; then
            echo "RELEASE_VERSION=latest" >> $GITHUB_ENV
          else
            echo "RELEASE_VERSION=${GITHUB_SHA}" >> $GITHUB_ENV
          fi
          echo "COMMIT_HASH=$(git rev-parse ${{ steps.extract_branch.outputs.branch }})" >> $GITHUB_ENV

      # read file from ./config/action/${{ github.event.inputs.brand }}.yml
      # make sure the file is exist and the variable name is uppercase
      - name: Parse brand config deployment to action environment
        run: |
          env_file_path="./config/action/${{ github.event.inputs.brand }}.yml"
          echo "Parsing file path: $env_file_path"
          while IFS=: read -r key value; do
            echo "Parsing env: $key=$value"

            # Trim leading/trailing whitespace from key and value
            key=$(echo "$key" | tr -d '[:space:]')
            value=$(echo "$value" | tr -d '[:space:]')

            # Append the key-value pair to $GITHUB_ENV
            echo "$key=$value" >> $GITHUB_ENV
          done < "$env_file_path"

      - name: Build and Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            MEDUSA_ADMIN_BACKEND_URL=${{ env.MEDUSA_ADMIN_BACKEND_URL }}
            HOST=${{ env.HOST }}
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.brand }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.COMMIT_HASH }}
